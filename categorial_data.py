# -*- coding: utf-8 -*-
"""categorial data

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eVMNkQprGuaetKAC-aa0zkLlC4FX_yhP
"""

import pandas as pd


cars=pd.read_csv('newcar_data.csv')
print(cars.to_string())

#One Hot Encoding
#We cannot make use of the Car or Model column in our data since they are not numeric. A linear relationship between a categorical variable, Car or Model, and a numeric variable, CO2, cannot be determined.
#To fix this issue, we must have a numeric representation of the categorical variable. One way to do this is to have a column representing each group in the category.
#For each column, the values will be 1 or 0 where 1 represents the inclusion of the group and 0 represents the exclusion. This transformation is called one hot encoding.
#You do not have to do this manually, the Python Pandas module has a function that called get_dummies() which does one hot encoding.

ohe_cars = pd.get_dummies(cars[['car']])
ohe_cars = ohe_cars.astype(int)

print(ohe_cars.to_string())

import pandas as pd
from sklearn import linear_model

cars = pd.read_csv("newcar_data.csv")
ohe_cars = pd.get_dummies(cars[['car']])

X = pd.concat([cars[['volume', 'weight']], ohe_cars], axis=1)
y = cars['co2_emmison']

regr = linear_model.LinearRegression()
regr.fit(X,y)

##predict the CO2 emission of a VW where the weight is 2300kg, and the volume is 1300cm3:
predictedCO2 = regr.predict([[2300, 1300,0,0,0,0,0,0,0,0,1,0]])

print(predictedCO2)