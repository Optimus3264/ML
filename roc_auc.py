# -*- coding: utf-8 -*-
"""ROC/AUC

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1JWl02aKtBLSyHBjUDHgSkWqpuCJTUfoS
"""

from sklearn.linear_model import LogisticRegression
import matplotlib.pyplot as plt
from sklearn.datasets import make_classification #create fake dataset
from sklearn.model_selection import train_test_split
from sklearn.metrics import roc_curve, roc_auc_score, RocCurveDisplay

# 1. Create synthetic binary classification data
X, y = make_classification(n_samples=1000, n_classes=2, random_state=42)

# 2. Split into training and testing
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=42)

# 3. Train a Logistic Regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# 4. Predict probabilities
y_probs = model.predict_proba(X_test)[:, 1]  # Get probability for class 1

# 5. Compute ROC Curve
fpr, tpr, thresholds = roc_curve(y_test, y_probs)

# 6. Calculate AUC
auc_score = roc_auc_score(y_test, y_probs)
print(f"AUC Score: {auc_score:.2f}")

# 7. Plot ROC Curve
plt.figure()
plt.plot(fpr, tpr, label=f"ROC Curve (AUC = {auc_score:.2f})")
plt.plot([0, 1], [0, 1], 'k--')  # Diagonal line for random guessing
plt.xlabel("False Positive Rate")
plt.ylabel("True Positive Rate")
plt.title("ROC Curve")
plt.legend()
plt.grid(True)
plt.show()
#The dashed line is a baseline (random classifier).
#A good model's curve will be above this line and close to the top-left corner.