# -*- coding: utf-8 -*-
"""logistic regression

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1iDjHp2FsgP-qjgS-plM8VwEMwiN_nH_0
"""

import numpy as np
from sklearn import linear_model

#X represents the size of a tumor in centimeters.
X = np.array([3.78, 2.44, 2.09, 0.14, 1.72, 1.65, 4.92, 4.37, 4.96, 4.52, 3.69, 5.88]).reshape(-1,1)

#Note: X has to be reshaped into a column from a row for the LogisticRegression() function to work.
#y represents whether or not the tumor is cancerous (0 for "No", 1 for "Yes").
y = np.array([0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1])

#From the sklearn module we will use the LogisticRegression() method to create a logistic regression object.
#This object has a method called fit() that takes the independent and dependent values as parameters and fills the regression object with data that describes the relationship:

logr=linear_model.LogisticRegression()
logr.fit(X,y)

# Now we have a logistic regression object that is ready to weather a tumor is cancerous based on the tumor size:
# predict if tumor is cancerous where the size is 3.46mm:

predicted=logr.predict(np.array([3.46]).reshape(-1,1))
print(predicted) #output is 0 bcoz 3.46 is not in dataset.